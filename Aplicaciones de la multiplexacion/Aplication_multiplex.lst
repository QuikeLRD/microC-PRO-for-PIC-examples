;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 25/07/2023 07:08:31 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFCB  	GOTO        406
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x001C	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x001E	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x0020	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x0022	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x0024	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x0026	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x0028	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x002A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x002C	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x002E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x0030	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x0032	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x0034	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x0036	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x0038	0x0012      	RETURN      0
; end of _Div_8X8_U
_deco_ac:
;decodificador_7seg.h,19 :: 		char deco_ac(char num){
;decodificador_7seg.h,22 :: 		switch(num){
0x003A	0xD01E      	BRA         L_deco_ac12
;decodificador_7seg.h,23 :: 		case 0: var = 63; break;
L_deco_ac14:
0x003C	0x0E3F      	MOVLW       63
0x003E	0x6E01      	MOVWF       R1 
0x0040	0xD039      	BRA         L_deco_ac13
;decodificador_7seg.h,24 :: 		case 1: var =  6; break;
L_deco_ac15:
0x0042	0x0E06      	MOVLW       6
0x0044	0x6E01      	MOVWF       R1 
0x0046	0xD036      	BRA         L_deco_ac13
;decodificador_7seg.h,25 :: 		case 2: var = 91; break;
L_deco_ac16:
0x0048	0x0E5B      	MOVLW       91
0x004A	0x6E01      	MOVWF       R1 
0x004C	0xD033      	BRA         L_deco_ac13
;decodificador_7seg.h,26 :: 		case 3: var = 79; break;
L_deco_ac17:
0x004E	0x0E4F      	MOVLW       79
0x0050	0x6E01      	MOVWF       R1 
0x0052	0xD030      	BRA         L_deco_ac13
;decodificador_7seg.h,27 :: 		case 4: var =102; break;
L_deco_ac18:
0x0054	0x0E66      	MOVLW       102
0x0056	0x6E01      	MOVWF       R1 
0x0058	0xD02D      	BRA         L_deco_ac13
;decodificador_7seg.h,28 :: 		case 5: var =109; break;
L_deco_ac19:
0x005A	0x0E6D      	MOVLW       109
0x005C	0x6E01      	MOVWF       R1 
0x005E	0xD02A      	BRA         L_deco_ac13
;decodificador_7seg.h,29 :: 		case 6: var =125; break;
L_deco_ac20:
0x0060	0x0E7D      	MOVLW       125
0x0062	0x6E01      	MOVWF       R1 
0x0064	0xD027      	BRA         L_deco_ac13
;decodificador_7seg.h,30 :: 		case 7: var =  7; break;
L_deco_ac21:
0x0066	0x0E07      	MOVLW       7
0x0068	0x6E01      	MOVWF       R1 
0x006A	0xD024      	BRA         L_deco_ac13
;decodificador_7seg.h,31 :: 		case 8: var =127; break;
L_deco_ac22:
0x006C	0x0E7F      	MOVLW       127
0x006E	0x6E01      	MOVWF       R1 
0x0070	0xD021      	BRA         L_deco_ac13
;decodificador_7seg.h,32 :: 		case 9: var =103; break;
L_deco_ac23:
0x0072	0x0E67      	MOVLW       103
0x0074	0x6E01      	MOVWF       R1 
0x0076	0xD01E      	BRA         L_deco_ac13
;decodificador_7seg.h,34 :: 		}
L_deco_ac12:
0x0078	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x007A	0x0A00      	XORLW       0
0x007C	0xE0DF      	BZ          L_deco_ac14
0x007E	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x0080	0x0A01      	XORLW       1
0x0082	0xE0DF      	BZ          L_deco_ac15
0x0084	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x0086	0x0A02      	XORLW       2
0x0088	0xE0DF      	BZ          L_deco_ac16
0x008A	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x008C	0x0A03      	XORLW       3
0x008E	0xE0DF      	BZ          L_deco_ac17
0x0090	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x0092	0x0A04      	XORLW       4
0x0094	0xE0DF      	BZ          L_deco_ac18
0x0096	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x0098	0x0A05      	XORLW       5
0x009A	0xE0DF      	BZ          L_deco_ac19
0x009C	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x009E	0x0A06      	XORLW       6
0x00A0	0xE0DF      	BZ          L_deco_ac20
0x00A2	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x00A4	0x0A07      	XORLW       7
0x00A6	0xE0DF      	BZ          L_deco_ac21
0x00A8	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x00AA	0x0A08      	XORLW       8
0x00AC	0xE0DF      	BZ          L_deco_ac22
0x00AE	0x5018      	MOVF        FARG_deco_ac_num, 0 
0x00B0	0x0A09      	XORLW       9
0x00B2	0xE0DF      	BZ          L_deco_ac23
L_deco_ac13:
;decodificador_7seg.h,35 :: 		return (255-var);
0x00B4	0x5001      	MOVF        R1, 0 
0x00B6	0x08FF      	SUBLW       255
0x00B8	0x6E00      	MOVWF       R0 
;decodificador_7seg.h,36 :: 		}
L_end_deco_ac:
0x00BA	0x0012      	RETURN      0
; end of _deco_ac
_multiplex:
;Display_multiplex.c,12 :: 		void multiplex(){
;Display_multiplex.c,13 :: 		D1 =1; D2=0; D3=0; D4=0;
0x00BC	0x8080      	BSF         PORTA, 0 
0x00BE	0x9280      	BCF         PORTA, 1 
0x00C0	0x9480      	BCF         PORTA, 2 
0x00C2	0x9680      	BCF         PORTA, 3 
;Display_multiplex.c,14 :: 		datos = deco_ac(minutos/10);
0x00C4	0x0E0A      	MOVLW       10
0x00C6	0x6E04      	MOVWF       R4 
0x00C8	0xF000C016  	MOVFF       _minutos, R0
0x00CC	0xDFA7      	RCALL       _Div_8X8_U
0x00CE	0xF018C000  	MOVFF       R0, FARG_deco_ac_num
0x00D2	0xDFB3      	RCALL       _deco_ac
0x00D4	0xFF83C000  	MOVFF       R0, PORTD
;Display_multiplex.c,15 :: 		delay_ms(tiempo);
0x00D8	0x0E0D      	MOVLW       13
0x00DA	0x6E0C      	MOVWF       R12, 0
0x00DC	0x0EFB      	MOVLW       251
0x00DE	0x6E0D      	MOVWF       R13, 0
L_multiplex24:
0x00E0	0x2E0D      	DECFSZ      R13, 1, 0
0x00E2	0xD7FE      	BRA         L_multiplex24
0x00E4	0x2E0C      	DECFSZ      R12, 1, 0
0x00E6	0xD7FC      	BRA         L_multiplex24
0x00E8	0x0000      	NOP
0x00EA	0x0000      	NOP
;Display_multiplex.c,16 :: 		D1 =0; D2=1; D3=0; D4=0;
0x00EC	0x9080      	BCF         PORTA, 0 
0x00EE	0x8280      	BSF         PORTA, 1 
0x00F0	0x9480      	BCF         PORTA, 2 
0x00F2	0x9680      	BCF         PORTA, 3 
;Display_multiplex.c,17 :: 		datos = deco_ac(minutos%10);
0x00F4	0x0E0A      	MOVLW       10
0x00F6	0x6E04      	MOVWF       R4 
0x00F8	0xF000C016  	MOVFF       _minutos, R0
0x00FC	0xDF8F      	RCALL       _Div_8X8_U
0x00FE	0xF000C008  	MOVFF       R8, R0
0x0102	0xF018C000  	MOVFF       R0, FARG_deco_ac_num
0x0106	0xDF99      	RCALL       _deco_ac
0x0108	0xFF83C000  	MOVFF       R0, PORTD
;Display_multiplex.c,18 :: 		delay_ms(tiempo);
0x010C	0x0E0D      	MOVLW       13
0x010E	0x6E0C      	MOVWF       R12, 0
0x0110	0x0EFB      	MOVLW       251
0x0112	0x6E0D      	MOVWF       R13, 0
L_multiplex25:
0x0114	0x2E0D      	DECFSZ      R13, 1, 0
0x0116	0xD7FE      	BRA         L_multiplex25
0x0118	0x2E0C      	DECFSZ      R12, 1, 0
0x011A	0xD7FC      	BRA         L_multiplex25
0x011C	0x0000      	NOP
0x011E	0x0000      	NOP
;Display_multiplex.c,20 :: 		D1 =0; D2=0; D3=1; D4=0;
0x0120	0x9080      	BCF         PORTA, 0 
0x0122	0x9280      	BCF         PORTA, 1 
0x0124	0x8480      	BSF         PORTA, 2 
0x0126	0x9680      	BCF         PORTA, 3 
;Display_multiplex.c,21 :: 		datos = deco_ac(segundos/10);
0x0128	0x0E0A      	MOVLW       10
0x012A	0x6E04      	MOVWF       R4 
0x012C	0xF000C017  	MOVFF       _segundos, R0
0x0130	0xDF75      	RCALL       _Div_8X8_U
0x0132	0xF018C000  	MOVFF       R0, FARG_deco_ac_num
0x0136	0xDF81      	RCALL       _deco_ac
0x0138	0xFF83C000  	MOVFF       R0, PORTD
;Display_multiplex.c,22 :: 		delay_ms(tiempo);
0x013C	0x0E0D      	MOVLW       13
0x013E	0x6E0C      	MOVWF       R12, 0
0x0140	0x0EFB      	MOVLW       251
0x0142	0x6E0D      	MOVWF       R13, 0
L_multiplex26:
0x0144	0x2E0D      	DECFSZ      R13, 1, 0
0x0146	0xD7FE      	BRA         L_multiplex26
0x0148	0x2E0C      	DECFSZ      R12, 1, 0
0x014A	0xD7FC      	BRA         L_multiplex26
0x014C	0x0000      	NOP
0x014E	0x0000      	NOP
;Display_multiplex.c,23 :: 		D1 =0; D2=0; D3=0; D4=1;
0x0150	0x9080      	BCF         PORTA, 0 
0x0152	0x9280      	BCF         PORTA, 1 
0x0154	0x9480      	BCF         PORTA, 2 
0x0156	0x8680      	BSF         PORTA, 3 
;Display_multiplex.c,24 :: 		datos = deco_ac(segundos%10);
0x0158	0x0E0A      	MOVLW       10
0x015A	0x6E04      	MOVWF       R4 
0x015C	0xF000C017  	MOVFF       _segundos, R0
0x0160	0xDF5D      	RCALL       _Div_8X8_U
0x0162	0xF000C008  	MOVFF       R8, R0
0x0166	0xF018C000  	MOVFF       R0, FARG_deco_ac_num
0x016A	0xDF67      	RCALL       _deco_ac
0x016C	0xFF83C000  	MOVFF       R0, PORTD
;Display_multiplex.c,25 :: 		delay_ms(tiempo);
0x0170	0x0E0D      	MOVLW       13
0x0172	0x6E0C      	MOVWF       R12, 0
0x0174	0x0EFB      	MOVLW       251
0x0176	0x6E0D      	MOVWF       R13, 0
L_multiplex27:
0x0178	0x2E0D      	DECFSZ      R13, 1, 0
0x017A	0xD7FE      	BRA         L_multiplex27
0x017C	0x2E0C      	DECFSZ      R12, 1, 0
0x017E	0xD7FC      	BRA         L_multiplex27
0x0180	0x0000      	NOP
0x0182	0x0000      	NOP
;Display_multiplex.c,28 :: 		}
L_end_multiplex:
0x0184	0x0012      	RETURN      0
; end of _multiplex
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0186	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0188	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x018C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x018E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0190	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0192	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0194	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0196	0x6A15      	CLRF        _contador 
0x0198	0x0E05      	MOVLW       5
0x019A	0x6E16      	MOVWF       _minutos 
0x019C	0x0E37      	MOVLW       55
0x019E	0x6E17      	MOVWF       _segundos 
;Display_multiplex.c,30 :: 		void main() {
;Display_multiplex.c,31 :: 		ADCON1 = 0x0F;
0x01A0	0x0E0F      	MOVLW       15
0x01A2	0x6EC1      	MOVWF       ADCON1 
;Display_multiplex.c,32 :: 		TRISA  = 0x00;
0x01A4	0x6A92      	CLRF        TRISA 
;Display_multiplex.c,33 :: 		TRISD  = 0x00;
0x01A6	0x6A95      	CLRF        TRISD 
;Display_multiplex.c,35 :: 		TRISB.RB0 = 1;
0x01A8	0x8093      	BSF         TRISB, 0 
;Display_multiplex.c,36 :: 		TRISB.RB1 = 1;
0x01AA	0x8293      	BSF         TRISB, 1 
;Display_multiplex.c,38 :: 		D1=D2=D3=D4=0;
0x01AC	0x9680      	BCF         PORTA, 3 
0x01AE	0xB680      	BTFSC       PORTA, 3 
0x01B0	0xD002      	BRA         L__main37
0x01B2	0x9480      	BCF         PORTA, 2 
0x01B4	0xD001      	BRA         L__main38
L__main37:
0x01B6	0x8480      	BSF         PORTA, 2 
L__main38:
0x01B8	0xB480      	BTFSC       PORTA, 2 
0x01BA	0xD002      	BRA         L__main39
0x01BC	0x9280      	BCF         PORTA, 1 
0x01BE	0xD001      	BRA         L__main40
L__main39:
0x01C0	0x8280      	BSF         PORTA, 1 
L__main40:
0x01C2	0xB280      	BTFSC       PORTA, 1 
0x01C4	0xD002      	BRA         L__main41
0x01C6	0x9080      	BCF         PORTA, 0 
0x01C8	0xD001      	BRA         L__main42
L__main41:
0x01CA	0x8080      	BSF         PORTA, 0 
L__main42:
;Display_multiplex.c,40 :: 		while(1){
L_main28:
;Display_multiplex.c,41 :: 		if(contador==25){
0x01CC	0x5015      	MOVF        _contador, 0 
0x01CE	0x0A19      	XORLW       25
0x01D0	0xE10C      	BNZ         L_main30
;Display_multiplex.c,42 :: 		segundos++;
0x01D2	0x2A17      	INCF        _segundos, 1 
;Display_multiplex.c,43 :: 		if(segundos>59){
0x01D4	0x5017      	MOVF        _segundos, 0 
0x01D6	0x083B      	SUBLW       59
0x01D8	0xE206      	BC          L_main31
;Display_multiplex.c,44 :: 		segundos=0;
0x01DA	0x6A17      	CLRF        _segundos 
;Display_multiplex.c,45 :: 		minutos++;
0x01DC	0x2A16      	INCF        _minutos, 1 
;Display_multiplex.c,46 :: 		if(minutos>59)
0x01DE	0x5016      	MOVF        _minutos, 0 
0x01E0	0x083B      	SUBLW       59
0x01E2	0xA0D8      	BTFSS       STATUS, 0 
;Display_multiplex.c,47 :: 		minutos=0;
0x01E4	0x6A16      	CLRF        _minutos 
L_main32:
;Display_multiplex.c,48 :: 		}
L_main31:
;Display_multiplex.c,49 :: 		contador=-1;
0x01E6	0x0EFF      	MOVLW       255
0x01E8	0x6E15      	MOVWF       _contador 
;Display_multiplex.c,50 :: 		}
L_main30:
;Display_multiplex.c,51 :: 		multiplex();
0x01EA	0xDF68      	RCALL       _multiplex
;Display_multiplex.c,52 :: 		contador++;
0x01EC	0x2A15      	INCF        _contador, 1 
;Display_multiplex.c,53 :: 		}
0x01EE	0xD7EE      	BRA         L_main28
;Display_multiplex.c,58 :: 		}
L_end_main:
0x01F0	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [30]    _Div_8X8_U
0x003A     [130]    _deco_ac
0x00BC     [202]    _multiplex
0x0186      [16]    ___CC2DW
0x0196      [92]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    deco_ac_var_L0
0x0001       [1]    deco_cc_var_L0
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _contador
0x0016       [1]    _minutos
0x0017       [1]    _segundos
0x0018       [1]    FARG_deco_ac_num
0x0F80       [1]    PORTA
0x0F83       [1]    PORTD
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
