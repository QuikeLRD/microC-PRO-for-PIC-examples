;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/07/2023 10:23:35 a. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF1E  	GOTO        572
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x001C	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x001E	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x0020	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x0022	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x0024	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x0026	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x0028	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x002A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x002C	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x002E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x0030	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x0032	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x0034	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x0036	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x0038	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x003A	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x003C	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x003E	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x0040	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x0042	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x0044	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x0046	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x0048	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x004A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x004C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x004E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x0050	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x0052	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x0054	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x0056	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x0058	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x005A	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x005C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x005E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x0060	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x0062	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x0064	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x0066	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x0068	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x006A	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x006C	0x0012      	RETURN      0
; end of _Mul_32x32_U
_deco_ac:
;decodificador_7seg.h,19 :: 		char deco_ac(char num){
;decodificador_7seg.h,22 :: 		switch(num){
0x006E	0xD01E      	BRA         L_deco_ac12
;decodificador_7seg.h,23 :: 		case 0: var = 63; break;
L_deco_ac14:
0x0070	0x0E3F      	MOVLW       63
0x0072	0x6E01      	MOVWF       R1 
0x0074	0xD039      	BRA         L_deco_ac13
;decodificador_7seg.h,24 :: 		case 1: var =  6; break;
L_deco_ac15:
0x0076	0x0E06      	MOVLW       6
0x0078	0x6E01      	MOVWF       R1 
0x007A	0xD036      	BRA         L_deco_ac13
;decodificador_7seg.h,25 :: 		case 2: var = 91; break;
L_deco_ac16:
0x007C	0x0E5B      	MOVLW       91
0x007E	0x6E01      	MOVWF       R1 
0x0080	0xD033      	BRA         L_deco_ac13
;decodificador_7seg.h,26 :: 		case 3: var = 79; break;
L_deco_ac17:
0x0082	0x0E4F      	MOVLW       79
0x0084	0x6E01      	MOVWF       R1 
0x0086	0xD030      	BRA         L_deco_ac13
;decodificador_7seg.h,27 :: 		case 4: var =102; break;
L_deco_ac18:
0x0088	0x0E66      	MOVLW       102
0x008A	0x6E01      	MOVWF       R1 
0x008C	0xD02D      	BRA         L_deco_ac13
;decodificador_7seg.h,28 :: 		case 5: var =109; break;
L_deco_ac19:
0x008E	0x0E6D      	MOVLW       109
0x0090	0x6E01      	MOVWF       R1 
0x0092	0xD02A      	BRA         L_deco_ac13
;decodificador_7seg.h,29 :: 		case 6: var =125; break;
L_deco_ac20:
0x0094	0x0E7D      	MOVLW       125
0x0096	0x6E01      	MOVWF       R1 
0x0098	0xD027      	BRA         L_deco_ac13
;decodificador_7seg.h,30 :: 		case 7: var =  7; break;
L_deco_ac21:
0x009A	0x0E07      	MOVLW       7
0x009C	0x6E01      	MOVWF       R1 
0x009E	0xD024      	BRA         L_deco_ac13
;decodificador_7seg.h,31 :: 		case 8: var =127; break;
L_deco_ac22:
0x00A0	0x0E7F      	MOVLW       127
0x00A2	0x6E01      	MOVWF       R1 
0x00A4	0xD021      	BRA         L_deco_ac13
;decodificador_7seg.h,32 :: 		case 9: var =103; break;
L_deco_ac23:
0x00A6	0x0E67      	MOVLW       103
0x00A8	0x6E01      	MOVWF       R1 
0x00AA	0xD01E      	BRA         L_deco_ac13
;decodificador_7seg.h,34 :: 		}
L_deco_ac12:
0x00AC	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00AE	0x0A00      	XORLW       0
0x00B0	0xE0DF      	BZ          L_deco_ac14
0x00B2	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00B4	0x0A01      	XORLW       1
0x00B6	0xE0DF      	BZ          L_deco_ac15
0x00B8	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00BA	0x0A02      	XORLW       2
0x00BC	0xE0DF      	BZ          L_deco_ac16
0x00BE	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00C0	0x0A03      	XORLW       3
0x00C2	0xE0DF      	BZ          L_deco_ac17
0x00C4	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00C6	0x0A04      	XORLW       4
0x00C8	0xE0DF      	BZ          L_deco_ac18
0x00CA	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00CC	0x0A05      	XORLW       5
0x00CE	0xE0DF      	BZ          L_deco_ac19
0x00D0	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00D2	0x0A06      	XORLW       6
0x00D4	0xE0DF      	BZ          L_deco_ac20
0x00D6	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00D8	0x0A07      	XORLW       7
0x00DA	0xE0DF      	BZ          L_deco_ac21
0x00DC	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00DE	0x0A08      	XORLW       8
0x00E0	0xE0DF      	BZ          L_deco_ac22
0x00E2	0x501B      	MOVF        FARG_deco_ac_num, 0 
0x00E4	0x0A09      	XORLW       9
0x00E6	0xE0DF      	BZ          L_deco_ac23
L_deco_ac13:
;decodificador_7seg.h,35 :: 		return (127-var);
0x00E8	0x5001      	MOVF        R1, 0 
0x00EA	0x087F      	SUBLW       127
0x00EC	0x6E00      	MOVWF       R0 
;decodificador_7seg.h,36 :: 		}
L_end_deco_ac:
0x00EE	0x0012      	RETURN      0
; end of _deco_ac
_VDelay_ms:
;__Lib_Delays.c,123 :: 		void VDelay_ms(unsigned Time_ms){
;__Lib_Delays.c,126 :: 		NumberOfCyc = Clock_kHz()>>2;
0x00F0	0x0EE8      	MOVLW       232
0x00F2	0x6E1D      	MOVWF       VDelay_ms_NumberOfCyc_L0 
0x00F4	0x0E03      	MOVLW       3
0x00F6	0x6E1E      	MOVWF       VDelay_ms_NumberOfCyc_L0+1 
0x00F8	0x0E00      	MOVLW       0
0x00FA	0x6E1F      	MOVWF       VDelay_ms_NumberOfCyc_L0+2 
0x00FC	0x6E20      	MOVWF       VDelay_ms_NumberOfCyc_L0+3 
;__Lib_Delays.c,127 :: 		NumberOfCyc *= Time_ms;
0x00FE	0x0EE8      	MOVLW       232
0x0100	0x6E00      	MOVWF       R0 
0x0102	0x0E03      	MOVLW       3
0x0104	0x6E01      	MOVWF       R1 
0x0106	0x0E00      	MOVLW       0
0x0108	0x6E02      	MOVWF       R2 
0x010A	0x0E00      	MOVLW       0
0x010C	0x6E03      	MOVWF       R3 
0x010E	0xF004C01B  	MOVFF       FARG_VDelay_ms_Time_ms, R4
0x0112	0xF005C01C  	MOVFF       FARG_VDelay_ms_Time_ms+1, R5
0x0116	0x0E00      	MOVLW       0
0x0118	0x6E06      	MOVWF       R6 
0x011A	0x6E07      	MOVWF       R7 
0x011C	0xDF7F      	RCALL       _Mul_32x32_U
0x011E	0xF01DC000  	MOVFF       R0, VDelay_ms_NumberOfCyc_L0
0x0122	0xF01EC001  	MOVFF       R1, VDelay_ms_NumberOfCyc_L0+1
0x0126	0xF01FC002  	MOVFF       R2, VDelay_ms_NumberOfCyc_L0+2
0x012A	0xF020C003  	MOVFF       R3, VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,128 :: 		if (NumberOfCyc < 660)
0x012E	0x0E00      	MOVLW       0
0x0130	0x5C03      	SUBWF       R3, 0 
0x0132	0xE108      	BNZ         L__VDelay_ms54
0x0134	0x0E00      	MOVLW       0
0x0136	0x5C02      	SUBWF       R2, 0 
0x0138	0xE105      	BNZ         L__VDelay_ms54
0x013A	0x0E02      	MOVLW       2
0x013C	0x5C01      	SUBWF       R1, 0 
0x013E	0xE102      	BNZ         L__VDelay_ms54
0x0140	0x0E94      	MOVLW       148
0x0142	0x5C00      	SUBWF       R0, 0 
L__VDelay_ms54:
0x0144	0xE201      	BC          L_VDelay_ms23
;__Lib_Delays.c,129 :: 		return;
0x0146	0xD031      	BRA         L_end_VDelay_ms
L_VDelay_ms23:
;__Lib_Delays.c,130 :: 		NumberOfCyc -= 660;
0x0148	0x0E94      	MOVLW       148
0x014A	0x5E1D      	SUBWF       VDelay_ms_NumberOfCyc_L0, 1 
0x014C	0x0E02      	MOVLW       2
0x014E	0x5A1E      	SUBWFB      VDelay_ms_NumberOfCyc_L0+1, 1 
0x0150	0x0E00      	MOVLW       0
0x0152	0x5A1F      	SUBWFB      VDelay_ms_NumberOfCyc_L0+2, 1 
0x0154	0x5A20      	SUBWFB      VDelay_ms_NumberOfCyc_L0+3, 1 
;__Lib_Delays.c,131 :: 		NumberOfCyc >>=  5;
0x0156	0x0E05      	MOVLW       5
0x0158	0x6E00      	MOVWF       R0 
0x015A	0x5000      	MOVF        R0, 0 
L__VDelay_ms55:
0x015C	0xE007      	BZ          L__VDelay_ms56
0x015E	0x3220      	RRCF        VDelay_ms_NumberOfCyc_L0+3, 1 
0x0160	0x321F      	RRCF        VDelay_ms_NumberOfCyc_L0+2, 1 
0x0162	0x321E      	RRCF        VDelay_ms_NumberOfCyc_L0+1, 1 
0x0164	0x321D      	RRCF        VDelay_ms_NumberOfCyc_L0, 1 
0x0166	0x9E20      	BCF         VDelay_ms_NumberOfCyc_L0+3, 7 
0x0168	0x0FFF      	ADDLW       255
0x016A	0xD7F8      	BRA         L__VDelay_ms55
L__VDelay_ms56:
;__Lib_Delays.c,133 :: 		while (NumberOfCyc--)
L_VDelay_ms24:
0x016C	0xF000C01D  	MOVFF       VDelay_ms_NumberOfCyc_L0, R0
0x0170	0xF001C01E  	MOVFF       VDelay_ms_NumberOfCyc_L0+1, R1
0x0174	0xF002C01F  	MOVFF       VDelay_ms_NumberOfCyc_L0+2, R2
0x0178	0xF003C020  	MOVFF       VDelay_ms_NumberOfCyc_L0+3, R3
0x017C	0x0E01      	MOVLW       1
0x017E	0x5E1D      	SUBWF       VDelay_ms_NumberOfCyc_L0, 1 
0x0180	0x0E00      	MOVLW       0
0x0182	0x5A1E      	SUBWFB      VDelay_ms_NumberOfCyc_L0+1, 1 
0x0184	0x5A1F      	SUBWFB      VDelay_ms_NumberOfCyc_L0+2, 1 
0x0186	0x5A20      	SUBWFB      VDelay_ms_NumberOfCyc_L0+3, 1 
0x0188	0x5000      	MOVF        R0, 0 
0x018A	0x1001      	IORWF       R1, 0 
0x018C	0x1002      	IORWF       R2, 0 
0x018E	0x1003      	IORWF       R3, 0 
0x0190	0xE00C      	BZ          L_VDelay_ms25
;__Lib_Delays.c,135 :: 		asm nop;
0x0192	0x0000      	NOP
;__Lib_Delays.c,136 :: 		asm nop;
0x0194	0x0000      	NOP
;__Lib_Delays.c,137 :: 		asm nop;
0x0196	0x0000      	NOP
;__Lib_Delays.c,138 :: 		asm nop;
0x0198	0x0000      	NOP
;__Lib_Delays.c,139 :: 		asm nop;
0x019A	0x0000      	NOP
;__Lib_Delays.c,140 :: 		asm nop;
0x019C	0x0000      	NOP
;__Lib_Delays.c,141 :: 		asm nop;
0x019E	0x0000      	NOP
;__Lib_Delays.c,142 :: 		asm nop;
0x01A0	0x0000      	NOP
;__Lib_Delays.c,143 :: 		asm nop;
0x01A2	0x0000      	NOP
;__Lib_Delays.c,144 :: 		asm nop;
0x01A4	0x0000      	NOP
;__Lib_Delays.c,145 :: 		asm nop;
0x01A6	0x0000      	NOP
;__Lib_Delays.c,146 :: 		}
0x01A8	0xD7E1      	BRA         L_VDelay_ms24
L_VDelay_ms25:
;__Lib_Delays.c,147 :: 		}
L_end_VDelay_ms:
0x01AA	0x0012      	RETURN      0
; end of _VDelay_ms
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x01AC	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x01AE	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x01B2	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x01B4	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x01B6	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x01B8	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x01BA	0x0012      	RETURN      0
; end of ___CC2DW
_deco_cc:
;decodificador_7seg.h,1 :: 		char deco_cc(char num){
;decodificador_7seg.h,4 :: 		switch(num){
0x01BC	0xD01E      	BRA         L_deco_cc0
;decodificador_7seg.h,5 :: 		case 0: var = 63; break;
L_deco_cc2:
0x01BE	0x0E3F      	MOVLW       63
0x01C0	0x6E01      	MOVWF       R1 
0x01C2	0xD039      	BRA         L_deco_cc1
;decodificador_7seg.h,6 :: 		case 1: var =  6; break;
L_deco_cc3:
0x01C4	0x0E06      	MOVLW       6
0x01C6	0x6E01      	MOVWF       R1 
0x01C8	0xD036      	BRA         L_deco_cc1
;decodificador_7seg.h,7 :: 		case 2: var = 91; break;
L_deco_cc4:
0x01CA	0x0E5B      	MOVLW       91
0x01CC	0x6E01      	MOVWF       R1 
0x01CE	0xD033      	BRA         L_deco_cc1
;decodificador_7seg.h,8 :: 		case 3: var = 79; break;
L_deco_cc5:
0x01D0	0x0E4F      	MOVLW       79
0x01D2	0x6E01      	MOVWF       R1 
0x01D4	0xD030      	BRA         L_deco_cc1
;decodificador_7seg.h,9 :: 		case 4: var =102; break;
L_deco_cc6:
0x01D6	0x0E66      	MOVLW       102
0x01D8	0x6E01      	MOVWF       R1 
0x01DA	0xD02D      	BRA         L_deco_cc1
;decodificador_7seg.h,10 :: 		case 5: var =109; break;
L_deco_cc7:
0x01DC	0x0E6D      	MOVLW       109
0x01DE	0x6E01      	MOVWF       R1 
0x01E0	0xD02A      	BRA         L_deco_cc1
;decodificador_7seg.h,11 :: 		case 6: var =125; break;
L_deco_cc8:
0x01E2	0x0E7D      	MOVLW       125
0x01E4	0x6E01      	MOVWF       R1 
0x01E6	0xD027      	BRA         L_deco_cc1
;decodificador_7seg.h,12 :: 		case 7: var =  7; break;
L_deco_cc9:
0x01E8	0x0E07      	MOVLW       7
0x01EA	0x6E01      	MOVWF       R1 
0x01EC	0xD024      	BRA         L_deco_cc1
;decodificador_7seg.h,13 :: 		case 8: var =127; break;
L_deco_cc10:
0x01EE	0x0E7F      	MOVLW       127
0x01F0	0x6E01      	MOVWF       R1 
0x01F2	0xD021      	BRA         L_deco_cc1
;decodificador_7seg.h,14 :: 		case 9: var =103; break;
L_deco_cc11:
0x01F4	0x0E67      	MOVLW       103
0x01F6	0x6E01      	MOVWF       R1 
0x01F8	0xD01E      	BRA         L_deco_cc1
;decodificador_7seg.h,16 :: 		}
L_deco_cc0:
0x01FA	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x01FC	0x0A00      	XORLW       0
0x01FE	0xE0DF      	BZ          L_deco_cc2
0x0200	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x0202	0x0A01      	XORLW       1
0x0204	0xE0DF      	BZ          L_deco_cc3
0x0206	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x0208	0x0A02      	XORLW       2
0x020A	0xE0DF      	BZ          L_deco_cc4
0x020C	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x020E	0x0A03      	XORLW       3
0x0210	0xE0DF      	BZ          L_deco_cc5
0x0212	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x0214	0x0A04      	XORLW       4
0x0216	0xE0DF      	BZ          L_deco_cc6
0x0218	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x021A	0x0A05      	XORLW       5
0x021C	0xE0DF      	BZ          L_deco_cc7
0x021E	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x0220	0x0A06      	XORLW       6
0x0222	0xE0DF      	BZ          L_deco_cc8
0x0224	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x0226	0x0A07      	XORLW       7
0x0228	0xE0DF      	BZ          L_deco_cc9
0x022A	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x022C	0x0A08      	XORLW       8
0x022E	0xE0DF      	BZ          L_deco_cc10
0x0230	0x501B      	MOVF        FARG_deco_cc_num, 0 
0x0232	0x0A09      	XORLW       9
0x0234	0xE0DF      	BZ          L_deco_cc11
L_deco_cc1:
;decodificador_7seg.h,17 :: 		return var;
0x0236	0xF000C001  	MOVFF       R1, R0
;decodificador_7seg.h,18 :: 		}
L_end_deco_cc:
0x023A	0x0012      	RETURN      0
; end of _deco_cc
_main:
0x023C	0x0E09      	MOVLW       9
0x023E	0x6E15      	MOVWF       _digito2 
0x0240	0x6A16      	CLRF        22 
0x0242	0x0E64      	MOVLW       100
0x0244	0x6E17      	MOVWF       _tiempo 
0x0246	0x6A18      	CLRF        24 
0x0248	0x6A19      	CLRF        _digito1 
0x024A	0x6A1A      	CLRF        26 
;Display.c,4 :: 		void main() {
;Display.c,6 :: 		ADCON1 = 0x0F; //Todas las entradas I/O salidas son digitales.
0x024C	0x0E0F      	MOVLW       15
0x024E	0x6EC1      	MOVWF       ADCON1 
;Display.c,7 :: 		TRISA.RA0 = 1;
0x0250	0x8092      	BSF         TRISA, 0 
;Display.c,8 :: 		TRISA.RA1 = 1;
0x0252	0x8292      	BSF         TRISA, 1 
;Display.c,9 :: 		TRISB = 0x00;
0x0254	0x6A93      	CLRF        TRISB 
;Display.c,10 :: 		TRISD = 0x00;
0x0256	0x6A95      	CLRF        TRISD 
;Display.c,13 :: 		while(1){
L_main24:
;Display.c,15 :: 		if(RA0_bit){
0x0258	0xA080      	BTFSS       RA0_bit, BitPos(RA0_bit+0) 
0x025A	0xD01B      	BRA         L_main26
;Display.c,16 :: 		while(RA0_bit);      //Agregamos antirebote
L_main27:
0x025C	0xA080      	BTFSS       RA0_bit, BitPos(RA0_bit+0) 
0x025E	0xD001      	BRA         L_main28
0x0260	0xD7FD      	BRA         L_main27
L_main28:
;Display.c,17 :: 		tiempo = tiempo + 100;
0x0262	0x0E64      	MOVLW       100
0x0264	0x2417      	ADDWF       _tiempo, 0 
0x0266	0x6E01      	MOVWF       R1 
0x0268	0x0E00      	MOVLW       0
0x026A	0x2018      	ADDWFC      _tiempo+1, 0 
0x026C	0x6E02      	MOVWF       R2 
0x026E	0xF017C001  	MOVFF       R1, _tiempo
0x0272	0xF018C002  	MOVFF       R2, _tiempo+1
;Display.c,18 :: 		if(tiempo > 1000)
0x0276	0x0E80      	MOVLW       128
0x0278	0x0A03      	XORLW       3
0x027A	0x6E00      	MOVWF       R0 
0x027C	0x0E80      	MOVLW       128
0x027E	0x1802      	XORWF       R2, 0 
0x0280	0x5C00      	SUBWF       R0, 0 
0x0282	0xE102      	BNZ         L__main39
0x0284	0x5001      	MOVF        R1, 0 
0x0286	0x08E8      	SUBLW       232
L__main39:
0x0288	0xE204      	BC          L_main29
;Display.c,19 :: 		tiempo = 1000;
0x028A	0x0EE8      	MOVLW       232
0x028C	0x6E17      	MOVWF       _tiempo 
0x028E	0x0E03      	MOVLW       3
0x0290	0x6E18      	MOVWF       _tiempo+1 
L_main29:
;Display.c,20 :: 		}
L_main26:
;Display.c,21 :: 		if(!RA1_bit){
0x0292	0xB280      	BTFSC       RA1_bit, BitPos(RA1_bit+0) 
0x0294	0xD01A      	BRA         L_main30
;Display.c,22 :: 		while(!RA1_bit);
L_main31:
0x0296	0xB280      	BTFSC       RA1_bit, BitPos(RA1_bit+0) 
0x0298	0xD001      	BRA         L_main32
0x029A	0xD7FD      	BRA         L_main31
L_main32:
;Display.c,23 :: 		tiempo = tiempo - 100;
0x029C	0x0E64      	MOVLW       100
0x029E	0x5C17      	SUBWF       _tiempo, 0 
0x02A0	0x6E01      	MOVWF       R1 
0x02A2	0x0E00      	MOVLW       0
0x02A4	0x5818      	SUBWFB      _tiempo+1, 0 
0x02A6	0x6E02      	MOVWF       R2 
0x02A8	0xF017C001  	MOVFF       R1, _tiempo
0x02AC	0xF018C002  	MOVFF       R2, _tiempo+1
;Display.c,24 :: 		if(tiempo < 200)
0x02B0	0x0E80      	MOVLW       128
0x02B2	0x1802      	XORWF       R2, 0 
0x02B4	0x6E00      	MOVWF       R0 
0x02B6	0x0E80      	MOVLW       128
0x02B8	0x5C00      	SUBWF       R0, 0 
0x02BA	0xE102      	BNZ         L__main40
0x02BC	0x0EC8      	MOVLW       200
0x02BE	0x5C01      	SUBWF       R1, 0 
L__main40:
0x02C0	0xE204      	BC          L_main33
;Display.c,25 :: 		tiempo = 200;
0x02C2	0x0EC8      	MOVLW       200
0x02C4	0x6E17      	MOVWF       _tiempo 
0x02C6	0x0E00      	MOVLW       0
0x02C8	0x6E18      	MOVWF       _tiempo+1 
L_main33:
;Display.c,26 :: 		}
L_main30:
;Display.c,34 :: 		LATD = deco_cc(digito1);
0x02CA	0xF01BC019  	MOVFF       _digito1, FARG_deco_cc_num
0x02CE	0xDF76      	RCALL       _deco_cc
0x02D0	0xFF8CC000  	MOVFF       R0, LATD
;Display.c,35 :: 		LATB = deco_ac(digito2);
0x02D4	0xF01BC015  	MOVFF       _digito2, FARG_deco_ac_num
0x02D8	0xDECA      	RCALL       _deco_ac
0x02DA	0xFF8AC000  	MOVFF       R0, LATB
;Display.c,36 :: 		Vdelay_ms(tiempo);
0x02DE	0xF01BC017  	MOVFF       _tiempo, FARG_VDelay_ms_Time_ms
0x02E2	0xF01CC018  	MOVFF       _tiempo+1, FARG_VDelay_ms_Time_ms+1
0x02E6	0xDF04      	RCALL       _VDelay_ms
;Display.c,37 :: 		digito1++;
0x02E8	0x4A19      	INFSNZ      _digito1, 1 
0x02EA	0x2A1A      	INCF        _digito1+1, 1 
;Display.c,38 :: 		digito2--;
0x02EC	0x0E01      	MOVLW       1
0x02EE	0x5E15      	SUBWF       _digito2, 1 
0x02F0	0x0E00      	MOVLW       0
0x02F2	0x5A16      	SUBWFB      _digito2+1, 1 
;Display.c,39 :: 		if(digito1>9)
0x02F4	0x0E80      	MOVLW       128
0x02F6	0x6E00      	MOVWF       R0 
0x02F8	0x0E80      	MOVLW       128
0x02FA	0x181A      	XORWF       _digito1+1, 0 
0x02FC	0x5C00      	SUBWF       R0, 0 
0x02FE	0xE102      	BNZ         L__main41
0x0300	0x5019      	MOVF        _digito1, 0 
0x0302	0x0809      	SUBLW       9
L__main41:
0x0304	0xE202      	BC          L_main34
;Display.c,40 :: 		digito1 =0;
0x0306	0x6A19      	CLRF        _digito1 
0x0308	0x6A1A      	CLRF        _digito1+1 
L_main34:
;Display.c,41 :: 		if(digito2<0)
0x030A	0x0E80      	MOVLW       128
0x030C	0x1816      	XORWF       _digito2+1, 0 
0x030E	0x6E00      	MOVWF       R0 
0x0310	0x0E80      	MOVLW       128
0x0312	0x5C00      	SUBWF       R0, 0 
0x0314	0xE102      	BNZ         L__main42
0x0316	0x0E00      	MOVLW       0
0x0318	0x5C15      	SUBWF       _digito2, 0 
L__main42:
0x031A	0xE204      	BC          L_main35
;Display.c,42 :: 		digito2 =9;
0x031C	0x0E09      	MOVLW       9
0x031E	0x6E15      	MOVWF       _digito2 
0x0320	0x0E00      	MOVLW       0
0x0322	0x6E16      	MOVWF       _digito2+1 
L_main35:
;Display.c,46 :: 		}
0x0324	0xD799      	BRA         L_main24
;Display.c,49 :: 		}
L_end_main:
0x0326	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [82]    _Mul_32x32_U
0x006E     [130]    _deco_ac
0x00F0     [188]    _VDelay_ms
0x01AC      [16]    ___CC2DW
0x01BC     [128]    _deco_cc
0x023C     [236]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    deco_cc_var_L0
0x0001       [1]    deco_ac_var_L0
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _digito2
0x0017       [2]    _tiempo
0x0019       [2]    _digito1
0x001B       [2]    FARG_VDelay_ms_Time_ms
0x001B       [1]    FARG_deco_ac_num
0x001B       [1]    FARG_deco_cc_num
0x001D       [4]    VDelay_ms_NumberOfCyc_L0
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA0_bit
0x0F8A       [1]    LATB
0x0F8C       [1]    LATD
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
