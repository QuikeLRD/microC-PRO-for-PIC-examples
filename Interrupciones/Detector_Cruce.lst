;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/08/2024 03:32:56 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF1B  	GOTO        54
_Interrupt:
;Detector_Cruce.c,1 :: 		void Interrupt(){
;Detector_Cruce.c,3 :: 		if(INT0IF_bit == 1){
0x0008	0xA2F2      	BTFSS       INT0IF_bit, BitPos(INT0IF_bit+0) 
0x000A	0xD014      	BRA         L_Interrupt0
;Detector_Cruce.c,6 :: 		delay_us(3200);
0x000C	0x0E15      	MOVLW       21
0x000E	0x6E0C      	MOVWF       R12, 0
0x0010	0x0EC6      	MOVLW       198
0x0012	0x6E0D      	MOVWF       R13, 0
L_Interrupt1:
0x0014	0x2E0D      	DECFSZ      R13, 1, 0
0x0016	0xD7FE      	BRA         L_Interrupt1
0x0018	0x2E0C      	DECFSZ      R12, 1, 0
0x001A	0xD7FC      	BRA         L_Interrupt1
0x001C	0x0000      	NOP
;Detector_Cruce.c,9 :: 		PORTD.RD0 = 1;
0x001E	0x8083      	BSF         PORTD, 0 
;Detector_Cruce.c,10 :: 		delay_ms(1);
0x0020	0x0E07      	MOVLW       7
0x0022	0x6E0C      	MOVWF       R12, 0
0x0024	0x0E7D      	MOVLW       125
0x0026	0x6E0D      	MOVWF       R13, 0
L_Interrupt2:
0x0028	0x2E0D      	DECFSZ      R13, 1, 0
0x002A	0xD7FE      	BRA         L_Interrupt2
0x002C	0x2E0C      	DECFSZ      R12, 1, 0
0x002E	0xD7FC      	BRA         L_Interrupt2
;Detector_Cruce.c,11 :: 		PORTD.RD0 = 0;
0x0030	0x9083      	BCF         PORTD, 0 
;Detector_Cruce.c,13 :: 		INT0IF_bit = 0;                         //LIMPIAMOS LA BANDERA
0x0032	0x92F2      	BCF         INT0IF_bit, BitPos(INT0IF_bit+0) 
;Detector_Cruce.c,14 :: 		}
L_Interrupt0:
;Detector_Cruce.c,17 :: 		}
L_end_Interrupt:
L__Interrupt6:
0x0034	0x0011      	RETFIE      1
; end of _Interrupt
_main:
;Detector_Cruce.c,19 :: 		void main() {
;Detector_Cruce.c,20 :: 		ADCON1 = 15;                               //TODOS LOS PINES SON DIGITALES
0x0036	0x0E0F      	MOVLW       15
0x0038	0x6EC1      	MOVWF       ADCON1 
;Detector_Cruce.c,22 :: 		TRISB.RB0 = 1;
0x003A	0x8093      	BSF         TRISB, 0 
;Detector_Cruce.c,23 :: 		TRISD.RD0 = 0;
0x003C	0x9095      	BCF         TRISD, 0 
;Detector_Cruce.c,27 :: 		GIE_bit  = 1;                              //HABILITAMOS INTERRUPCIONES GLOBALES
0x003E	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;Detector_Cruce.c,28 :: 		PEIE_bit = 1;                              //HABILITAMOS INTERRUPCIONES DE PERIFERICOS
0x0040	0x8CF2      	BSF         PEIE_bit, BitPos(PEIE_bit+0) 
;Detector_Cruce.c,30 :: 		INT0IF_bit = 0;                            //LIMPIAMOS LA BANDERA INTERRUPCIÓN EXTERNA 0
0x0042	0x92F2      	BCF         INT0IF_bit, BitPos(INT0IF_bit+0) 
;Detector_Cruce.c,31 :: 		INT0IE_bit = 1;                            //HABILITAMOS INTERUPCIÓN EXTERNA 0
0x0044	0x88F2      	BSF         INT0IE_bit, BitPos(INT0IE_bit+0) 
;Detector_Cruce.c,33 :: 		INTEDG0_bit = 1;                           //INTERRUPCIÓN POR FLANCOS DE SUBIDA
0x0046	0x8CF1      	BSF         INTEDG0_bit, BitPos(INTEDG0_bit+0) 
;Detector_Cruce.c,35 :: 		PORTD.RD0 = 0;                            //PUERTO D0 APAGADO
0x0048	0x9083      	BCF         PORTD, 0 
;Detector_Cruce.c,37 :: 		while(1){
L_main3:
;Detector_Cruce.c,38 :: 		}
0x004A	0xD7FF      	BRA         L_main3
;Detector_Cruce.c,41 :: 		}
L_end_main:
0x004C	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [46]    _Interrupt
0x0036      [24]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F83       [1]    PORTD
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [0]    INTEDG0_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    INT0IF_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
